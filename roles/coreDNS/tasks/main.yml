---
- name: 使用yum安装nginx
  shell: yum -y install nginx
  when: inventory_hostname == 'hdss7-200'

- name: 创建目录
  shell: mkdir -p /etc/nginx/conf.d

- name: 启动nginx并设置为开机自启动
  shell: systemctl start nginx && systemctl enable nginx
  when: inventory_hostname == 'hdss7-200'

- name: 部署K8S的内网资源配置清单http服务
  template:
    src: k8s-yaml.od.com.conf.j2
    dest: /etc/nginx/conf.d/k8s-yaml.od.com.conf
    mode: 0644
  when: inventory_hostname == 'hdss7-200'

- name: 创建相关目录
  shell: mkdir -p /data/k8s-yaml
  when: inventory_hostname == 'hdss7-200'

- name: 使用nginx -t检查配置文件是否正确
  shell: nginx -t
  register: std_out
  when: inventory_hostname == 'hdss7-200'

- name: 查看nginx输出结果
  debug: msg={{ std_out.stdout_lines }}
  when: inventory_hostname == 'hdss7-200'

- name: 重新加载nginx配置信息
  shell: nginx -s reload
  when: inventory_hostname == 'hdss7-200'

- name: 修改/var/named/od.com.zone
  lineinfile:
    dest: /var/named/od.com.zone
    regexp: '^k8s-yaml'
    line: 'k8s-yaml              A {{ node200 }}'
  when: inventory_hostname == 'hdss7-11'

- name: 重启named服务
  shell: systemctl restart named
  when: inventory_hostname == 'hdss7-11'

- name: 重启网卡服务
  shell: systemctl restart network
  when: inventory_hostname == 'hdss7-11'

- name: 查看解析记录是否正常
  shell: dig -t A k8s-yaml.od.com @"{{ node11 }}" +short
  register: std_out
  when: inventory_hostname == 'hdss7-11'

- name: 查看解析记录输出结果
  debug: msg={{ std_out.stdout_lines }}
  when: inventory_hostname == 'hdss7-11'

- name: 创建coredns相关目录
  shell:  mkdir -p /data/k8s-yaml/coredns
  when: inventory_hostname == 'hdss7-200'

- name: 使用docker拉取coredns镜像来部署
  shell: docker pull coredns/coredns:1.6.1
  when: inventory_hostname == 'hdss7-200'

- name: 创建cm.yaml资源配置清单
  template:
    src: "{{ item }}.j2"
    dest: /data/k8s-yaml/coredns/{{ item }}
    mode: 0644
  with_items:
    - rbac.yaml
    - dp.yaml
    - cm.yaml
    - svc.yaml
  when: inventory_hostname == 'hdss7-200'

- name: 使用陈述式资源管理方法去apply声明式资源配置清单
  shell: kubectl apply -f http://k8s-yaml.od.com/coredns/{{ item }}
  with_items:
    - cm.yaml
    - dp.yaml
    - rbac.yaml
    - svc.yaml
  when: inventory_hostname == 'hdss7-21'

- name: 重启kubelet，否则可能会有问题
  shell: supervisorctl restart kubelet
  ignore_errors: yes

- name: 重启docker
  shell: systemctl restart docker
  ignore_errors: yes

- name: 重启keepalived
  shell: systemctl restart keepalived
  when: inventory_hostname == 'hdss7-11'

- name: 重启keepalived
  shell: systemctl restart keepalived
  when: inventory_hostname == 'hdss7-12'

- name: 查看coredns在k8s中的状态
  shell: kubectl get all -n kube-system -o wide
  register: std_out
  when: inventory_hostname == 'hdss7-21'

- name: 查看coredns在k8s中的状态输出
  debug: msg={{ std_out.stdout_lines }}
  when: inventory_hostname == 'hdss7-21'

- name: 查看集群IP配置信息
  shell: cat /opt/kubernetes/server/bin/kubelet.sh
  register: std_out
  when: inventory_hostname == 'hdss7-21'

- name: 查看集群IP配置信息输出，可以看到集群DNS已经在这里配置好了
  debug: msg={{ std_out.stdout_lines }}
  when: inventory_hostname == 'hdss7-21'

- name: 查看coredns解析www.baidu.com的情况
  shell: dig -t A www.baidu.com @192.168.0.2 +short
  register: std_out
  when: inventory_hostname == 'hdss7-21'
  ignore_errors: yes

- name: 查看coredns解析www.baidu.com的情况输出
  debug: msg={{ std_out.stdout_lines }}
  when: inventory_hostname == 'hdss7-21'
  ignore_errors: yes

- name: 查看coredns解析hdss7-21.host.com的情况
  shell: dig -t A hdss7-21.host.com @192.168.0.2 +short
  register: std_out
  when: inventory_hostname == 'hdss7-21'

- name: 查看coredns解析www.baidu.com的情况输出，因为我们在cm.yaml文件里面声明了forward
  # 它的下一级DNS就是10.4.7.11
  debug: msg={{ std_out.stdout_lines }}
  when: inventory_hostname == 'hdss7-21'
